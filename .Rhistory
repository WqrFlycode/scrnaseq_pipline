paste0(results_dir,"_before_qc.",figure_format),
plot_qc, width = 12, height = 6
)
)
# 质量控制-----
## Data：seurat对象
Data <- QualityControl(Data = Data)
# 质量控制-----
## Data：seurat对象
Data <- QualityControl(Data = Data)
source(paste0(function_dir,"/QualityControl.R"))
# 质量控制-----
## Data：seurat对象
Data <- QualityControl(Data = Data)
source(paste0(function_dir,"/QualityControl.R"))
# 质量控制-----
## Data：seurat对象
Data <- QualityControl(Data = Data)
# 质量控制-----
## Data：seurat对象
Data <- QualityControl(Data = Data)
source(paste0(function_dir,"/QualityControl.R"))
# 质量控制-----
## Data：seurat对象
Data <- QualityControl(Data = Data)
# 降维-----
## pc_num：降维后保留的主成分数量，默认为50
Data <- DimensionalityReduction(Data = Data, pc_num = 50)
source(paste0(function_dir,"/DimensionalityReduction.R"))
# 降维-----
## pc_num：降维后保留的主成分数量，默认为50
Data <- DimensionalityReduction(Data = Data, pc_num = 50)
DimHeatmap(Data, dims = 1:12, cells = 500) + scale_fill_continuous(guide = guide_legend())
# 降维-----
## pc_num：降维后保留的主成分数量，默认为50
Data <- DimensionalityReduction(Data = Data, pc_num = 50)
DimHeatmap(Data, dims = 1:12, cells = 500) + scale_fill_continuous(guide = guide_legend())
DimHeatmap(Data, dims = 1:12, cells = 500)
DimHeatmap(Data, dims = 1:3, cells = 500)
# Demonstration of highly variable genes
plot_hvg <- VariableFeaturePlot(Data)
plot_hvg <- suppressWarnings(
LabelPoints(
plot = plot_hvg, points = top10, repel = TRUE,xnudge = 0,ynudge = 0
)
)
top10 <- head(VariableFeatures(Data), 10)
# Demonstration of highly variable genes
plot_hvg <- VariableFeaturePlot(Data)
plot_hvg <- suppressWarnings(
LabelPoints(
plot = plot_hvg, points = top10, repel = TRUE,xnudge = 0,ynudge = 0
)
)
ggsave(
paste0(results_dir,"_hvg.",figure_format),
plot_hvg, width = 5, height = 5, bg = "white"
)
results_dir <- paste0(Data@tools$results_dir,"/DimensionalityReduction/",Data@tools$data_name)
ggsave(
paste0(results_dir,"_hvg.",figure_format),
plot_hvg, width = 5, height = 5, bg = "white"
)
figure_format = "png"
ggsave(
paste0(results_dir,"_hvg.",figure_format),
plot_hvg, width = 5, height = 5, bg = "white"
)
LabelPoints(
plot = plot_hvg, points = top10, repel = TRUE,xnudge = 0,ynudge = 0
)
rm(plot_hvg)
top10 <- head(VariableFeatures(Data), 10)
# Demonstration of highly variable genes
plot_hvg <- VariableFeaturePlot(Data)
plot_hvg <- LabelPoints(
plot = plot_hvg, points = top10, repel = TRUE,xnudge = 0,ynudge = 0
)
suppressWarnings(ggsave(
paste0(results_dir,"_hvg.",figure_format),
plot_hvg, width = 5, height = 5, bg = "white"
))
# Demonstration of highly variable genes
plot_hvg <- VariableFeaturePlot(Data) + theme(legend.position = "bottom")
suppressWarnings(ggsave(
paste0(results_dir,"_hvg.",figure_format),
plot_hvg, width = 5, height = 5, bg = "white"
))
plot_hvg <- LabelPoints(
plot = plot_hvg, points = top10, repel = TRUE,xnudge = 0,ynudge = 0
)
suppressWarnings(ggsave(
paste0(results_dir,"_hvg.",figure_format),
plot_hvg, width = 5, height = 5, bg = "white"
))
DimHeatmap(Data, dims = 1, cells = 500)
dev.off()
DimHeatmap(Data, dims = 1:12, cells = 500) + scale_fill_continuous(guide = guide_legend())
DimHeatmap(Data, dims = 1, cells = 500) + scale_fill_continuous(guide = guide_legend())
DimHeatmap(Data, dims = 1:12, cells = 500) + guide_colorbar()
DimHeatmap(Data, dims = 1, cells = 500) + guide_colorbar()
DimHeatmap(Data, dims = 1, cells = 500) + guides(fill = guide_colorbar())
DimHeatmap(Data, dims = 1, cells = 500)
DimHeatmap(Data, dims = 1, cells = 500)
DimHeatmap(Data, dims = 1, cells = 500) + guides(fill = guide_colorbar(reverse = TRUE))
DimHeatmap
DimHeatmap(Data, dims = 1, cells = 500, fast = FALSE) + guides(fill = guide_colorbar(reverse = TRUE))
DimHeatmap(Data, dims = 1:2, cells = 500, fast = FALSE) + guides(fill = guide_colorbar(reverse = TRUE))
DimHeatmap(Data, dims = 1:2, cells = 500, fast = FALSE) + guides(fill = guide_colorbar())
DimHeatmap(Data, dims = 1:2, cells = 500, fast = FALSE)
DimHeatmap(Data, dims = 1:2, cells = 500, fast = FALSE) + scale_fill_viridis_b()
DimHeatmap(Data, dims = 1:2, cells = 500, fast = FALSE) + scale_fill_viridis_c()
source(paste0(function_dir,"/DimensionalityReduction.R"))
# 降维-----
## pc_num：降维后保留的主成分数量，默认为50
Data <- DimensionalityReduction(Data = Data, pc_num = 50)
plot_heatmap <- DimHeatmap(Data, dims = 1:2, cells = 500, fast = FALSE)
ggsave(
paste0(results_dir,"_dimheatmap.",figure_format),
plot_heatmap,
width = 6, height = 5
)
plot_heatmap <- DimHeatmap(Data, dims = 1:9, cells = 500, fast = FALSE)
ggsave(
paste0(results_dir,"_dimheatmap.",figure_format),
plot_heatmap,
width = 6, height = 6
)
ggsave(
paste0(results_dir,"_dimheatmap.",figure_format),
plot_heatmap,
width = 12, height = 12
)
ggsave(
paste0(results_dir,"_dimheatmap.",figure_format),
plot_heatmap,
width = 15, height = 12
)
ggsave(
paste0(results_dir,"_dimheatmap.",figure_format),
plot_heatmap,
width = 20, height = 12
)
# plot 热图----
png(
filename = paste0(results_dir,"_dimheatmap.",figure_format),
width = 1080,
height = 1080,
units = "px",
bg = "white",
res = 100)
DimHeatmap(Data, dims = 1:9, cells = 500)
dev.off()
DimHeatmap(Data, dims = 1:9, cells = 500, fast = TRUE)
DimHeatmap(Data, dims = 1:9, cells = 500, fast = FALSE)
mean(Data@assays$RNA@scale.data)
max(Data@assays$RNA@scale.data)
min(Data@assays$RNA@scale.data)
hist(Data@assays$RNA@scale.data)
sd(Data@assays$RNA@scale.data)
source(paste0(function_dir,"/DimensionalityReduction.R"))
# 降维-----
## pc_num：降维后保留的主成分数量，默认为50
Data <- DimensionalityReduction(Data = Data, pc_num = 50)
dim(Data@reductions$pca@feature.loadings)
which.max(Data@reductions$pca@feature.loadings[,1])
head(rownames(Data@reductions$pca@feature.loadings))
# plot 热图----
png(
filename = paste0(results_dir,"_dimheatmap.",figure_format),
width = 1920*2,
height = 1080*2,
units = "px",
bg = "white",
res = 100)
DimHeatmap(Data, dims = 1:9, cells = 500)
dev.off()
# plot 热图----
png(
filename = paste0(results_dir,"_dimheatmap.",figure_format),
width = 1920,
height = 1080,
units = "px",
bg = "white",
res = 100)
DimHeatmap(Data, dims = 1:9, cells = 500)
dev.off()
which.min(Data@reductions$pca@feature.loadings[,1])
order(Data@reductions$pca@feature.loadings[,1])[1]
order(Data@reductions$pca@feature.loadings[,1])[2]
rownames(Data@reductions$pca@feature.loadings)[1491]
rownames(Data@reductions$pca@feature.loadings)[1260]
order(Data@reductions$pca@feature.loadings[,1])[3]
rownames(Data@reductions$pca@feature.loadings)[235]
order(abs(Data@reductions$pca@feature.loadings[,1]))[3]
order(abs(Data@reductions$pca@feature.loadings[,1]))[1:3]
rownames(Data@reductions$pca@feature.loadings)[c(1288,955,124)]
abs(-1)
order(abs(Data@reductions$pca@feature.loadings[,1]), decreasing = T)[1:3]
rownames(Data@reductions$pca@feature.loadings)[c(80,312,129)]
# plot 热图----
png(
filename = paste0(results_dir,"_dimheatmap.",figure_format),
width = 1920,
height = 1080,
units = "px",
bg = "white",
res = 100)
DimHeatmap(Data, dims = 1:9, cells = 500)
dev.off()
GSE155136_Pig_RawCounts <- read.table("E:/Data/GSE155136_Pig_RawCounts.txt.gz")
head(rownames(GSE155136_Pig_RawCounts))
GSE155136_Pig_RawCounts[1:3,1:3]
GSE155136_Pig_RawCounts <- read.table("E:/Data/GSE155136_Pig_RawCounts.txt.gz",header = T)
GSE155136_Pig_RawCounts[1:3,1:3]
GSE155136_Pig_RawCounts[1:3,1:5]
GSE155136_Pig_TPMs <- read.table("E:/Data/GSE155136_Pig_TPMs.txt.gz",header = T)
GSE155136_Pig_TPMs[1:3,1:6]
rm(GSE155136_Pig_RawCounts,GSE155136_Pig_TPMs)
rm(plot_heatmap,plot_hvg)
rm(top10)
Data <- Clustering(Data = Data, resolution = 1, re = TRUE)
source(paste0(function_dir,"/Clustering.R"))
Data <- Clustering(Data = Data, resolution = 1, re = TRUE)
Data <- Clustering(Data = Data, resolution = 1)
source(paste0(function_dir,"/Annotation.R"))
Data <- Annotation(
Data = Data,
ref_singler_dir = "celldex_ref_dataset/",ref_cell_dex = "MouseRNAseqData",
# ref_markers = markers_list,
re = FALSE
)
source(paste0(function_dir,"/Annotation.R"))
Data <- Annotation(
Data = Data,
ref_singler_dir = "celldex_ref_dataset/",ref_cell_dex = "MouseRNAseqData",
# ref_markers = markers_list,
re = FALSE
)
source(paste0(function_dir,"/Annotation.R"))
Data <- Annotation(
Data = Data,
ref_singler_dir = "celldex_ref_dataset/",ref_cell_dex = "MouseRNAseqData",
# ref_markers = markers_list,
re = FALSE
)
source(paste0(function_dir,"/DifferentialExpressing.R"))
Data <- DifferentialExpressing(Data = Data, re = FALSE)
library(dplyr)
Data <- DifferentialExpressing(Data = Data, re = FALSE)
Data <- DifferentialExpressing(Data = Data, re = FALSE)
head(cluster_max)
unique(cluster_max$cluster)
source(paste0(function_dir,"/DifferentialExpressing.R"))
Data <- DifferentialExpressing(Data = Data, re = FALSE)
dim(Data)
dim(Data@assays$RNA@counts)
Data
function_dir <- "scripts/"
source(paste0(function_dir,"/ReadData.R"))
source(paste0(function_dir,"/Integration.R"))
source(paste0(function_dir,"/QualityControl.R"))
source(paste0(function_dir,"/DimensionalityReduction.R"))
source(paste0(function_dir,"/Clustering.R"))
source(paste0(function_dir,"/DifferentialExpressing.R"))
source(paste0(function_dir,"/Annotation.R"))
source(paste0(function_dir,"/Enrich.R"))
source(paste0(function_dir,"/TrajectoryAnalysis.R"))
source(paste0(function_dir,"/CellCommunication.R"))
source(paste0(function_dir,"/analysis_scrnaseq.R"))
Data
rm(Data, data_dir, function_dir, paths)
function_dir <- "scripts/"
source(paste0(function_dir,"/ReadData.R"))
source(paste0(function_dir,"/Integration.R"))
source(paste0(function_dir,"/QualityControl.R"))
source(paste0(function_dir,"/DimensionalityReduction.R"))
source(paste0(function_dir,"/Clustering.R"))
source(paste0(function_dir,"/DifferentialExpressing.R"))
source(paste0(function_dir,"/Annotation.R"))
source(paste0(function_dir,"/Enrich.R"))
source(paste0(function_dir,"/TrajectoryAnalysis.R"))
source(paste0(function_dir,"/CellCommunication.R"))
source(paste0(function_dir,"/analysis_scrnaseq.R"))
# analysis
analysis_scrnaseq(
data_name = "GSM3746212_Muscle_1",
data_dir = data_dir,
results_dir = "case/",
pc_num = 50,resolution = 0.5,
ref_singler_dir = "celldex_ref_dataset/",
ref_cell_dex = "MouseRNAseqData"
)
source(paste0(function_dir,"/analysis_scrnaseq.R"))
# analysis
analysis_scrnaseq(
data_name = "case",
data_dir = "case/",
results_dir = "case/",
pc_num = 50,resolution = 0.5,
ref_singler_dir = "celldex_ref_dataset/",
ref_cell_dex = "MouseRNAseqData"
)
# analysis
analysis_scrnaseq(
data_name = "case",
data_dir = "case/",
results_dir = "case/",
pc_num = 50,resolution = 0.5,
ref_singler_dir = "celldex_ref_dataset/",
ref_cell_dex = "MouseRNAseqData"
)
# analysis
analysis_scrnaseq(
data_name = "case",
data_dir = "case/",
results_dir = "case/",
pc_num = 50,resolution = 0.5,
ref_singler_dir = "celldex_ref_dataset/",
ref_cell_dex = "MouseRNAseqData"
)
library(Seurat)
library(ggplot2)
# library(harmony)
library(patchwork)
library(ggpubr)
library(ggrepel)
library(SingleR)
# library(RColorBrewer)
function_dir <- "scripts/"
source(paste0(function_dir,"/ReadData.R"))
source(paste0(function_dir,"/Integration.R"))
source(paste0(function_dir,"/QualityControl.R"))
source(paste0(function_dir,"/DimensionalityReduction.R"))
source(paste0(function_dir,"/Clustering.R"))
source(paste0(function_dir,"/DifferentialExpressing.R"))
source(paste0(function_dir,"/Annotation.R"))
source(paste0(function_dir,"/Enrich.R"))
source(paste0(function_dir,"/TrajectoryAnalysis.R"))
source(paste0(function_dir,"/CellCommunication.R"))
source(paste0(function_dir,"/analysis_scrnaseq.R"))
# analysis
analysis_scrnaseq(
data_name = "case",
data_dir = "case/",
results_dir = "case/",
pc_num = 50,resolution = 0.5,
ref_singler_dir = "celldex_ref_dataset/",
ref_cell_dex = "MouseRNAseqData"
)
# analysis
analysis_scrnaseq(
data_name = "case",
data_dir = "E:/Data/PlatformData/chicken/chicken1. Comparative single-cell transcriptomic analysis reveals/",
results_dir = NULL,
pc_num = 50,resolution = 0.5,
ref_singler_dir = "celldex_ref_dataset/",
ref_cell_dex = "MouseRNAseqData"
)
Data <- ReadData(
data_name = "case",
data_dir = "E:/Data/PlatformData/chicken/chicken1. Comparative single-cell transcriptomic analysis reveals/",
results_dir = NULL
)
# analysis
analysis_scrnaseq(
data_name = "chicken2",
data_dir = "E:/Data/PlatformData/chicken/chicken2. Direct Reprogramming of Non-limb Fibroblasts/",
results_dir = NULL,
pc_num = 50,resolution = 0.5,
ref_singler_dir = "celldex_ref_dataset/",
ref_cell_dex = "MouseRNAseqData"
)
source(paste0(function_dir,"/analysis_scrnaseq.R"))
# analysis
analysis_scrnaseq(
data_name = "chicken2",
data_dir = "E:/Data/PlatformData/chicken/chicken2. Direct Reprogramming of Non-limb Fibroblasts/",
results_dir = NULL,
pc_num = 50,resolution = 0.5,
ref_singler_dir = "celldex_ref_dataset/",
ref_cell_dex = "MouseRNAseqData"
)
# analysis
analysis_scrnaseq(
data_name = "chicken2",
data_dir = "E:/Data/PlatformData/chicken/chicken2. Direct Reprogramming of Non-limb Fibroblasts/",
results_dir = NULL,
pc_num = 50,resolution = 0.5,
ref_singler_dir = "celldex_ref_dataset/",
ref_cell_dex = "MouseRNAseqData"
)
# analysis
analysis_scrnaseq(
data_name = "chicken2",
data_dir = "E:/Data/PlatformData/chicken/chicken2. Direct Reprogramming of Non-limb Fibroblasts/",
results_dir = NULL,
pc_num = 50,resolution = 0.5,
ref_singler_dir = "celldex_ref_dataset/",
ref_cell_dex = "MouseRNAseqData"
)
source(paste0(function_dir,"/analysis_scrnaseq.R"))
# analysis
analysis_scrnaseq(
data_name = "chicken3",
data_dir = "E:/Data/PlatformData/chicken/chicken3/",
results_dir = NULL,
pc_num = 50,resolution = 0.5,
ref_singler_dir = "celldex_ref_dataset/",
ref_cell_dex = "MouseRNAseqData"
)
# analysis
analysis_scrnaseq(
data_name = "chicken3",
data_dir = "E:/Data/PlatformData/chicken/chicken3/",
results_dir = NULL,
pc_num = 50,resolution = 0.5,
ref_singler_dir = "celldex_ref_dataset/",
ref_cell_dex = "MouseRNAseqData"
)
function_dir <- "scripts/"
source(paste0(function_dir,"/ReadData.R"))
source(paste0(function_dir,"/Integration.R"))
source(paste0(function_dir,"/QualityControl.R"))
source(paste0(function_dir,"/DimensionalityReduction.R"))
source(paste0(function_dir,"/Clustering.R"))
source(paste0(function_dir,"/DifferentialExpressing.R"))
source(paste0(function_dir,"/Annotation.R"))
source(paste0(function_dir,"/Enrich.R"))
source(paste0(function_dir,"/TrajectoryAnalysis.R"))
source(paste0(function_dir,"/CellCommunication.R"))
source(paste0(function_dir,"/analysis_scrnaseq.R"))
function_dir <- "scripts/"
source(paste0(function_dir,"/ReadData.R"))
source(paste0(function_dir,"/Integration.R"))
source(paste0(function_dir,"/QualityControl.R"))
source(paste0(function_dir,"/DimensionalityReduction.R"))
source(paste0(function_dir,"/Clustering.R"))
source(paste0(function_dir,"/DifferentialExpressing.R"))
source(paste0(function_dir,"/Annotation.R"))
source(paste0(function_dir,"/Enrich.R"))
source(paste0(function_dir,"/TrajectoryAnalysis.R"))
source(paste0(function_dir,"/CellCommunication.R"))
source(paste0(function_dir,"/analysis_scrnaseq.R"))
# analysis
analysis_scrnaseq(
data_name = "chicken3",
data_dir = "E:/Data/PlatformData/chicken/chicken3/",
results_dir = NULL,
pc_num = 50,resolution = 0.5,
ref_singler_dir = "celldex_ref_dataset/",
ref_cell_dex = "MouseRNAseqData"
)
sample_files[1]
sample_files[1] %in% exist_files
exist_files
grep("_matrix.mtx.gz", exist_files)
grep("matrix.mtx.gz", exist_files)
length(grep("_matrix.mtx.gz", exist_files))
length(grep("_matrix.mtx.gz", exist_files)) == 1
length(grep("matrix.mtx.gz", exist_files)) == 1
data_name = "chicken3"
data_dir = "E:/Data/PlatformData/chicken/chicken3/"
results_dir = NULL
files <- list.files(data_dir)
# 文件夹中的所有样本
samples <- sapply(
files[grep("matrix.mtx",files)],
function(x) {
substr(
x = x,
start = 1,
stop = regexpr("matrix.mtx.gz",x)-2
)
},
USE.NAMES = FALSE
)
exist_files <- files[grep(samples[i], files)]
i =1
exist_files <- files[grep(samples[i], files)]
length(grep("features.tsv.gz", exist_files)) == 1 |
length(grep("genes.tsv.gz", exist_files)) == 1
length(grep("features.tsv.gz", exist_files)) == 1
length(grep("genes.tsv.gz", exist_files)) == 1
is_exist <- c(
length(grep("matrix.mtx.gz", exist_files)) == 1,
length(grep("barcodes.tsv.gz", exist_files)) == 1,
length(grep("features.tsv.gz", exist_files)) == 1 |
length(grep("genes.tsv.gz", exist_files)) == 1
)
is_exist
all(is_exist)
all(is_exist)
sample_files[is_exist]
exist_files[is_exist]
sample_files <- exist_files[is_exist]
sample_files <- paste0(data_dir,sample_files)
sample_files
# read expression matrix
data <- Matrix::readMM(file = sample_files[1])
sample_files[1]
grep("matrix.mtx.gz", exist_files)
exist_files
exist_files[grep("matrix.mtx.gz", exist_files)]
list.files("E:/Data/单细胞数据-王章/老鼠的2个样本-GSE110878_RAW/")
list.files("E:/Data/单细胞数据-王章/老鼠的2个样本-GSE110878_RAW/",recursive = T)
read.table("E:/Data/PlatformData/chicken/chicken16/GSE108221_rpkms_sc.txt.gz",header = T,nrows = 5)
GSE108221 <- read.table("E:/Data/PlatformData/chicken/chicken16/GSE108221_rpkms_sc.txt.gz",header = T,nrows = 5)
GSE108221[,1:5]
GSE108221_un <- read.table("E:/Data/PlatformData/chicken/chicken16/GSE108221_rpkms_sc.txt",header = T,nrows = 5)
GSE108221 == GSE108221_un
all(GSE108221 == GSE108221_un)
